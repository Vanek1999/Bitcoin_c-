//-----Разраб: ento_Vanek-----
//-----Подключение библиотек-----
#include<windows.h>
#include <iostream>
#include <cstdlib>

using namespace std;

//-----Цвета-----
enum ConsoleColor {
    Black = 0,
    Blue = 1,
    Green = 2,
    Cyan = 3,
    Red = 4,
    Magenta = 5,
    Brown = 6,
    LightGray = 7,
    DarkGray = 8,
    LightBlue = 9,
    LightGreen = 10,
    LightCyan = 11,
    LightRed = 12,
    LightMagenta = 13,
    Yellow = 14,
    White = 15 };

//-----Подключение цветов-----
void SetColor(ConsoleColor text, ConsoleColor background) {
    HANDLE hStdOut = GetStdHandle(STD_OUTPUT_HANDLE);
    SetConsoleTextAttribute(hStdOut, (WORD)((background << 4) | text)); }

//-----Данные кошелька и смена цвета-----
int privateKey() {
    int pr_amount = 0;
    int comm_amount = 0;
    int uncomm_amount = 0;
    string prkey = "";
    string comm = "";
    string uncomm = "";
    SetColor(Green, Black);
    //-----цикл while генерирует нужное количество букв-----
    while (pr_amount < 50){
        prkey += char('a' + rand() % ('z' - 'a'));
        pr_amount++; }
    cout << "privateKey                           :    " << prkey << "\n";
    while (comm_amount < 25) {
        comm += char('a' + rand() % ('z' - 'a'));
        comm_amount++; }
    cout << "Bitcoin Compressed Adress            :    "<< comm << "\n";
    while (uncomm_amount < 25) {
        uncomm += char('a' + rand() % ('z' - 'a'));
        uncomm_amount++; }
    cout << "Bitcoin Uncompressed Adress          :    " << uncomm << "\n";
    SetColor(White, Black);
    cout << "\n\nn\n";
    return 0; }

//-----Ввод кошелька и поиск------
int main() {
    int i = 0, wallet = 0, randomDigits[1] = {};;
    float coin = 0;
    SetColor(White, Black);
    cout << "Enter bitcoin wallet or press any key: ";
    cin.get();
    while (true) {
        SetColor(Red, Black);
        wallet++;
        randomDigits[i] = rand();
        if (randomDigits[i] > 10000) {
            cout << "\nFound " << wallet;
            coin += 0.000001;
            cout << " wallets, they contain " << coin << " BTC\n";
            privateKey(); }
        else {
            cout << "\nFound " << wallet << " wallets, they contain " << fixed << coin << " BTC\n";}}
            privateKey(); }